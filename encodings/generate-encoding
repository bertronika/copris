#!/bin/bash -u
# Generate an encoding file from an argument-provided character set within the
# range 0x80..0xFF (128..255).

CODEPAGE="${1:-x}"
TEMPFILE="/tmp/copris_generate-encoding"

if (( $# < 1 )); then
	printf "This script requires a iconv(1)-recognisable character set name as its sole argument.
Check availability and proper names with 'iconv --list'.\n"
	exit 1
fi

iconv --from-code="$CODEPAGE" \
      --to-code="UTF-8" \
      -c -o "$TEMPFILE" \
      template-prefix.raw || exit 1

{
	printf '# Character set %s
# Generated with %s\n\n' "${CODEPAGE^^}" "$(iconv --version | sed '1q')"
	if grep -q '^$' "$TEMPFILE"; then
		printf "# Some characters were invalid and were ommited from the listing.\n"
	fi
	# Merge lines of both files, remove empty definitions
	paste -d' ' "$TEMPFILE" template-postfix.txt | grep -v '^ '
} > "${TEMPFILE}.ini"

# Explain invisible characters
sed -e "/"$'\xC2'$'\xAD'"/ s/$/ ; SHY (soft hyphen)/" \
    -e "/"$'\xC2'$'\xA0'"/ s/$/ ; NBSP (non-breaking space)/" \
    "${TEMPFILE}.ini" > "${CODEPAGE}.ini"

printf "Generated file '%s.ini'.\n" "$CODEPAGE"

# prefix file generated with
#    { for i in {128..255}; do printf "\x$(printf %x $i)\n"; done } >| template-prefix.raw

# postfix file generated with
#    printf '= 0x%X\n' {128..255} >| template-postfix.txt
