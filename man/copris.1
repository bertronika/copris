.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "COPRIS" "1" "2024\-08\-13" "" "0.9\-696\-gee856c8\-dirty"
.SH NAME
\f[B]copris\f[R] \- a converting printer server
.SH SYNOPSIS
.PP
\f[B]copris\f[R] [\f[I]options\f[R]] [\f[I]printer device\f[R] or
\f[I]output file\f[R]]
.PD 0
.P
.PD
\f[B]copris\f[R] \f[B]\-\-dump\-commands\f[R] > new_feature_file.ini
.SH DESCRIPTION
COPRIS is a printer server and text conversion program that bridges the
gap between modern, UTF\-8\-encoded, Markdown\-formatted text and
(older) dot\-matrix and thermal printers.
.PP
When provided with the appropriate configuration files and options,
COPRIS reads plain text from a local source or the network (with a
built\-in TCP socket server), applies optional processing methods to it
and sends it to the destination device (or file).
.PP
Two main text processing methods stand out in COPRIS; they are:
.SS Character recoding via encoding files
Older printers usually don\[cq]t support multi\-byte UTF\-8\-encoded
text.
Rather, they use code pages and customised character sets which may vary
between different manufacturers.
COPRIS can load a character \f[I]encoding file\f[R] that is used to
recode received text.
By writing or selecting a premade one for your printer and locale, you
allow COPRIS to recode (replace) received characters with appropriate
locale\-specific ones, understood by your printer.
.PP
This is particulary useful in cases where printer distributors swapped
lesser\-used ASCII characters (such as \f[CR]\[ti] \[at] {\f[R]) with
those from the national alphabet, so they could be typed out directly
from the non\-localised keyboard.
By finding similar\-looking characters in printer\[cq]s character set,
you may, crudely, regain those lost characters.
.PP
However, \f[I]encoding files\f[R] aren\[cq]t tied only to locale
conversions, you may use them to remap any character.
Examples include typographic quotation marks, em dashes, copyright
symbol and others, commonly found in character sets of various printers.
.SS Markdown formatting via printer feature files
Many printers support commands (escape codes) for formatting printed
text (e.g.\ Epson has its ESC/P control language).
COPRIS can read a \f[I]printer feature file\f[R] that specifies such
commands, invoked by following Markdown attributes:
.IP \[bu] 2
bold and italic \f[I]emphasis\f[R] via asterisks (\f[CR]*\f[R],
\f[CR]**\f[R], \f[CR]***\f[R]) or underscores (\f[CR]_\f[R],
\f[CR]__\f[R], \f[CR]___\f[R])
.IP \[bu] 2
up to 4 levels of \f[I]headings\f[R] via number signs (\f[CR]#\f[R],
\f[CR]##\f[R], \f[CR]###\f[R], \f[CR]####\f[R])
.IP \[bu] 2
\f[I]blockquotes\f[R] via greater\-than signs and a space
(\f[CR]>\ \f[R])
.IP \[bu] 2
\f[I]inline code\f[R] via single backticks (\f[CR]\[ga]\f[R])
.IP \[bu] 2
\f[I]code blocks\f[R] via triple backticks (\f[CR]\[ga]\[ga]\[ga]\f[R])
\[en] or four spaces, but those are disabled by default
.IP \[bu] 2
\f[I]links\f[R] via angle brackets (\f[CR]< >\f[R])
.PP
Any command can be bound to mentioned attributes.
If desired, bold emphasis can trigger double\-width text, headings may
change the font face or size and links can be made underlined.
There are no limits, as long as your \f[I]printer feature file\f[R]
contains commands that are understood by the printer (or any other
destination device).
.PP
You might have noticed that only a subset of the Markdown specification
is supported.
COPRIS intentionally doesn\[cq]t alter text layout (white space,
paragraphs etc.), since there\[cq]s no markup/layout engine.
You may freely format your input plain\-text files to your liking, and
COPRIS will preserve the spacing and newlines (just be warned about four
leading spaces triggering a code block).
.PP
   *   *   *   *   *
.SS File format
\f[I]Encoding\f[R] and \f[I]printer feature files\f[R] are expected to
be in the INI file format:
.IP
.EX
\f[I]# Comment\f[R]
key1 = whitespace separated values
key2 = whitespace separated values ; inline comment
\&...
.EE
.PP
Left\-hand keys should be written out directly as UTF\-8 characters or
strings, right\-hand values are expected to be in either decimal, octal
(prefixed by a \f[CR]0\f[R]) or hexadecimal base (prefixed with
\f[CR]0x\f[R]).
Don\[cq]t prepend zeroes to decimal numbers for alignment, as
they\[cq]ll be interpreted as octal numbers.
Instead, use any amount of spaces (or tabulators).
.PP
In case you need a \f[CR]key\f[R] to resolve to a blank
\f[CR]value\f[R], set \f[CR]\[at]\f[R] as the value (e.g.\ if you want
to remove certain characters from the text, or omit rendering some
Markdown attributes).
.PP
Here are some examples:
.IP
.EX
Ã… = 0xC5                ; for an encoding file
F_BOLD_OFF = 0x1B 0x45  ; for a printer feature file
F_H3_ON = \[at]             ; ditto
.EE
.SH OPTIONS
.TP
\f[B]\-p\f[R], \f[B]\-\-port\f[R] \f[I]NUMBER\f[R]
Run COPRIS as a network server on port \f[I]NUMBER\f[R].
Superuser privileges are required if \f[I]NUMBER\f[R] is less than 1024.
.TP
\f[B]\-e\f[R], \f[B]\-\-encoding\f[R] \f[I]FILE\f[R]
Recode characters in received text according to definitions from
encoding \f[I]FILE\f[R].
This option can be specified multiple times.
.TP
\f[B]\-\-ignore\-missing\f[R]
If recoding characters, do not terminate the program if received text
contains any possibly unwanted multi\-byte characters that were not
handled by specified \f[I]FILE\f[R]s.
.TP
\f[B]\-f\f[R], \f[B]\-\-feature\f[R] \f[I]FILE\f[R]
Process Markdown formatting in received text and apply session commands
according to commands from printer feature \f[I]FILE\f[R].
This option can be specified multiple times.
.TP
\f[B]\-c\f[R], \f[B]\-\-parse\-commands\f[R]
If a printer feature file is being used, recognise feature commands in
received text and apply them.
Commands must be prefixed with a predefined symbol, which is shown when
invoking \f[CR]copris \-\-version\f[R].
This feature only works when the \f[I]received text starts with\f[R]
\f[CR]$ENABLE_COMMANDS\f[R], \f[CR]$ENABLE_CMD\f[R] or \f[CR]$CMD\f[R].
.TP
\f[B]\-\-dump\-commands\f[R]
Show all possible printer feature commands in INI file format (e.g.\ to
be piped into a new printer feature file you are making).
.TP
\f[B]\-d\f[R], \f[B]\-\-daemon\f[R]
If running as a network server, do not exit after the first connection.
.TP
\f[B]\-l\f[R], \f[B]\-\-limit\f[R] \f[I]NUMBER\f[R]
If running as a network server, limit number of received bytes to
\f[I]NUMBER\f[R].
.TP
\f[B]\-\-cutoff\-limit\f[R]
If limit is active, cut text on \f[I]NUMBER\f[R] count instead of
discarding the whole chunk.
.TP
\f[B]\-v\f[R], \f[B]\-\-verbose\f[R]
Show informative status messages.
If specified twice, show even more messages.
.TP
\f[B]\-q\f[R], \f[B]\-\-quiet\f[R]
Do not show any unneccessary messages, except warnings and fatal errors,
routed to \f[I]stderr\f[R].
This also omits \f[I]notes\f[R], shown if COPRIS assumes it is not
invoked properly.
.TP
\f[B]\-h\f[R], \f[B]\-\-help\f[R]
Show a short option summary.
.TP
\f[B]\-V\f[R], \f[B]\-\-version\f[R]
Show program version, author and build\-time options.
.PP
Do not specify a port number if you want to read from standard input.
Likewise, omit the output file to have text echoed out to standard
output (or piped elsewhere).
.SH EXAMPLES
\f[B]Notice:\f[R] COPRIS is in active development.
Some features are still missing, others have not been thoroughly tested
yet.
Command line option arguments may change in future.
Version 1.0 will be tagged when the feature set will be deemed complete.
.PP
Run as a simple server on port 8080, perform no text recoding, output
received data to the serial port and exit after one connection.
Note that superuser privileges are required if the specified port is
smaller than 1024.
.IP
.EX
copris \-p 8080 /dev/ttyS0
.EE
.PP
Serve on port 8080 as a daemon (do not exit after first connection),
recode text using the \f[CR]slovene.ini\f[R] encoding file, limit any
incoming text to a maximum of 100 characters and print received data to
the terminal.
Note that text limit works only when running as a server.
.IP
.EX
copris \-p 8080 \-d \-e slovene.ini \-l 100
.EE
.PP
Read local file \f[CR]font\-showcase.md\f[R] using the printer feature
file \f[CR]epson\-escp.ini\f[R].
Interpret any possible user commands, found in the local file.
Output formatted text to an USB printer interface on the local computer:
.IP
.EX
copris \-f epson\-escp.ini \-c /dev/usb/lp0 < font\-showcase.md
.EE
.SH DEVELOPMENT
COPRIS\[cq] development repository resides at \c
.UR https://github.com/bertronika/copris
.UE \c
\&.
.SH SEE ALSO
\f[B]stty\f[R](1), \f[B]intercopris\f[R](1)
