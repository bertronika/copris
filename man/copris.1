.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "COPRIS" "1" "2022-06-19" "" "0.9-356-g1b2b1a9-dirty"
.hy
.SH NAME
.PP
\f[B]copris\f[R] - a converting printer server
.SH SYNOPSIS
.PP
\f[B]copris\f[R] [\f[I]options\f[R]] [\f[I]output file\f[R]]
.PD 0
.P
.PD
\f[B]copris\f[R] \f[B]--dump-commands\f[R] > new_printer_set.ini
.SH DESCRIPTION
.PP
COPRIS is a printer server and text conversion program, intended to
receive UTF-8 encoded text locally or over a network, process it and
send it to a dot-matrix printer.
In its core, COPRIS reads text from standard input or a built-in TCP
socket server (similar to \f[V]telnet(1)\f[R] or \f[V]nc(1)\f[R]), and
optionally applies two processing methods to it:
.SS Character translation
.PP
COPRIS can load a \f[I]translation file\f[R] that defines user-specified
characters, not understood by printers - usually multi-byte (UTF-8)
ones.
They are swapped with appropriate (or at least similar) locale-specific
replacements, defined in the same file.
.SS Printer feature sets
.PP
While COPRIS processes only plain text, some additional markup can be
applied to it via \f[I]printer feature set files\f[R].
These may specify printer\[cq]s escape codes for attributes, such as
bold, italic, double-width text, they may change font faces, sizes,
spacing and so on.
To recognise markup, COPRIS understands Markdown-formatted input text.
.SS File format
.PP
\f[I]Translation\f[R] and \f[I]printer feature set files\f[R] are
expected to be in the INI file format:
.IP
.nf
\f[C]
# Comment
[section]
key = whitespace separated values ; inline comment
\f[R]
.fi
.SH OPTIONS
.TP
\f[B]-p\f[R], \f[B]--port\f[R] \f[I]NUMBER\f[R]
Numeric port number, if listening on a network.
.TP
\f[B]-t\f[R], \f[B]--trfile\f[R] \f[I]TRFILE\f[R]
Path to the translation file
.TP
\f[B]-r\f[R], \f[B]--printer\f[R] \f[I]PRSET\f[R]
Path to the printer feature set file
.TP
\f[B]--dump-commands\f[R]
Print all possible printer feature set commands in an INI file format
.TP
\f[B]-d\f[R], \f[B]--daemon\f[R]
Run as a daemon, if listening on a network
.TP
\f[B]-l\f[R], \f[B]--limit\f[R] \f[I]NUMBER\f[R]
Limit number of received bytes, if listening on a network
.TP
\f[B]--cutoff-limit\f[R]
If limit is active, cut text right on the \f[I]NUMBER\f[R] count instead
of omitting the whole chunk
.TP
\f[B]-v\f[R], \f[B]--verbose\f[R]
Be verbose.
Specify twice to be even more verbose.
.TP
\f[B]-q\f[R], \f[B]--quiet\f[R]
Be quiet, print only fatal errors.
.TP
\f[B]-h\f[R], \f[B]--help\f[R]
Print an option summary.
.TP
\f[B]-V\f[R], \f[B]--version\f[R]
Print program version, author and build-time options.
.SH USAGE AND EXAMPLES
.PP
Run as a simple server on port 8080, perform no text conversion, output
received data to the serial port and exit after one connection.
Note that superuser privileges are required if the specified port is
smaller than 1024.
.IP
.nf
\f[C]
copris -p 8080 /dev/ttyS0
\f[R]
.fi
.PP
Serve on port 8080 as a daemon (do not exit after first connection),
translate characters using the \f[V]slovene.ini\f[R] translation file,
limit any incoming text to maximum 100 characters and print received
data to the terminal.
Note that text limit works only when running as a server.
.IP
.nf
\f[C]
copris -p 8080 -d -t slovene.ini -l 100
\f[R]
.fi
.PP
Read local file \f[V]Manual.md\f[R] using the specified printer feature
set \f[V]epson.ini\f[R] and output formatted text to a USB interface on
the local computer:
.IP
.nf
\f[C]
copris -r epson.ini /dev/ttyUSB0 < Manual.md
\f[R]
.fi
.PP
If you need to debug COPRIS or are curious about its internal status,
use the \f[V]-v/--verbose\f[R] parameter up to two times.
.PP
For a summary of all command line arguments, invoke COPRIS with
\f[V]-h/--help\f[R].
For a listing of build-type options, version and author information,
invoke with \f[V]-V/--version\f[R].
.PP
Note that you can only use \f[V]-l/--limit\f[R] and
\f[V]--cutoff-limit\f[R] when reading from the network.
If you want to limit incoming text from a local source, use some other
tool or amend your data.
.PP
COPRIS will print informative status messages to the terminal, except if
you use the \f[V]-q/--quiet\f[R] parameter, which will hide all
non-essential messages, except fatal errors.
Note that if an output file is specified, no status messages are sent to
it.
If a non-fatal error occurs in quiet mode, COPRIS will disable the
offending broken feature, notify you about it and continue execution.
.SH FILES
.PP
Example translation and feature set files can be found in
\f[V]/usr/share/copris\f[R].
.SH DEVELOPMENT
.PP
\f[B]copris\f[R] is developed at <https://github.com/bertronika/copris>.
